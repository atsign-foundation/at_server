name: Refreshcerts
on:
  workflow_dispatch:
  schedule:
    - cron: '39 7 15 * *' # At 0739 on the 15th day of every month

jobs:
  refresh-ACME-cert:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v3.0.2 # checkout the repository content to github runner.

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9 #install the python needed

      - name: setup certinfo
        uses: atsign-company/certinfo-action@v1

      - name: execute acme_certs.py
        run: |
          set +e
          pip3 install dnspython requests
          CERTNAME="vip"
          DOMAIN="ve.atsign.zone"
          FQDN="$CERTNAME"."$DOMAIN"
          sudo mkdir -p /gluster/@/api/keys
          sudo chmod -R 777 /gluster
          echo "${{secrets.LETSENCRYPT_PRIVKEY}}" > /gluster/@/api/keys/letsencrypt.key
          echo "${{secrets.ZEROSSL_PRIVKEY}}" > /gluster/@/api/keys/zerossl.key
          echo "${{secrets.GOOGLE_PRIVKEY}}" > /gluster/@/api/keys/google.key
          python3 ./automation/acme_certs.py "$FQDN"
          if certinfo -expiry "$FQDN".cert.pem | grep -q CN="$FQDN"; then
            echo "Letsencrypt certificate validated"
          else
            echo "Failing over to Google"
            python3 ./automation/acme_certs.py -g "$FQDN"
            if certinfo -expiry "$FQDN".cert.pem | grep -q CN="$FQDN"; then
              echo "Google certificate validated"
            else
              echo "Failing over to ZeroSSL"
              python3 ./automation/acme_certs.py -z "$FQDN"
              if certinfo -expiry "$FQDN".cert.pem | grep -q CN="$FQDN"; then
                echo "ZeroSSL certificate validated"
              else
                echo "Unable to get valid cert from any source"
                exit 1
              fi
            fi
          fi
          set -e
          cp "$FQDN".cert.pem ./at_virtual_environment/ve_base/contents/atsign/root/certs/cert.pem
          cp "$FQDN".key ./at_virtual_environment/ve_base/contents/atsign/root/certs/privkey.pem
          cp "$FQDN".fullchain.pem ./at_virtual_environment/ve_base/contents/atsign/root/certs/fullchain.pem
          cp ./at_virtual_environment/ve_base/contents/atsign/root/certs/*.pem \
            ./at_virtual_environment/ve_base/contents/atsign/secondary/base/certs/
          git config --global user.name 'Getcert Action'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
        env:
          GITHUB_API_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          DO_KEY: ${{ secrets.DO_KEY }}

      - name: store logs and responses
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cert-logs
          path: vip.ve.atsign.zone.*

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          commit-message: 'chore: New certificates for at_server'
          committer: library-action[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: library-action[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          signoff: false
          add-paths: ./at_virtual_environment
          branch: bot-new-certs
          delete-branch: true
          title: 'chore: New certificates generated'
          body: |
            Fresh certificates generated.
          labels: |
            operations
          assignees: cpswan
          reviewers: gkc
          draft: false
