name: Refreshcerts
on:
  workflow_dispatch:
  schedule:
    - cron: '39 7 15 1/2 *' # At 0739 on the 15th day of every odd month
    
jobs:
  refresh-ACME-cert:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner.

      - name: setup python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.9 #install the python needed
      
      - name: setup certinfo
        uses: atsign-company/certinfo-action@v1

      - name: execute acme_certs.py # sync action not fired by this push
        run: |
          pip3 install dnspython requests
          CERTNAME="vip"
          DOMAIN="ve.atsign.zone"
          FQDN="$CERTNAME"."$DOMAIN"
          sudo mkdir -p /gluster/@/api/keys
          sudo chmod -R 777 /gluster
          echo "${{secrets.LETSENCRYPT_PRIVKEY}}" > /gluster/@/api/keys/letsencrypt.key
          echo "${{secrets.ZEROSSL_PRIVKEY}}" > /gluster/@/api/keys/zerossl.key
          python3 ./automation/acme_certs.py "$FQDN"
          if certinfo -expiry "$FQDN".cert.pem | grep -q CN="$FQDN"; then
            echo "Letsencrypt certificate validated"
          else
            echo "Failing over to ZeroSSL"
            python3 ./automation/acme_certs.py -z "$FQDN"
            if certinfo -expiry "$FQDN".cert.pem | grep -q CN="$FQDN"; then
              echo "ZeroSSL certificate validated"
            else
              echo "Unable to get valid cert for either source"
              exit 1
            fi
          fi
          cp "$FQDN".cert.pem ./at_virtual_environment/ve_base/contents/atsign/root/certs/cert.pem
          cp "$FQDN".key ./at_virtual_environment/ve_base/contents/atsign/root/certs/privkey.pem
          cp "$FQDN".fullchain.pem ./at_virtual_environment/ve_base/contents/atsign/root/certs/fullchain.pem
          cp ./at_virtual_environment/ve_base/contents/atsign/root/certs/*.pem \
            ./at_virtual_environment/ve_base/contents/atsign/secondary/base/certs/
          git add ./at_virtual_environment/ve_base/contents/atsign/secondary/base/certs/*\
            ./at_virtual_environment/ve_base/contents/atsign/root/certs/*
          git config --global user.name 'Getcert Action'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git commit -m 'Automated certificate refresh'
          git push
        env:
          GITHUB_API_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          DO_KEY: ${{ secrets.DO_KEY }}
      
      - name: store logs and responses
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cert-logs
          path: vip.ve.atsign.zone.*

      - name: Google Chat Notification
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: New certificates for at_server virtual environment
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}

  docker:
    runs-on: ubuntu-latest
    needs: [ refresh-ACME-cert ]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.12.0 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.10.0
        with:
          file: at_virtual_environment/ve/Dockerfile.vip
          push: true
          tags: |
            atsigncompany/virtualenv:vip
            atsigncompany/virtualenv:GHA${{ github.run_number }}
          platforms: |
            linux/amd64
            linux/arm64/v8

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Google Chat Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: New Docker image for atsigncompany/virtualenv:vip
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
          