name: at_root deploy (prod)
on:
  push:
    tags:
      - 'r*.*.*'
    paths:
      - packages/*_root_server/**

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read
  
jobs:
  Docker_Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      # Extract branch for docker tag
      - name: Get branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@aa33708b10e362ff993539393ff100fa93ed6a27 # v3.5.0

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build the Docker image for Dev
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
        with:
          file: packages/at_root_server/Dockerfile
          context: packages/at_root_server
          push: true
          tags: |
            atsigncompany/root:prod
            atsigncompany/root:prod-gha${{ github.run_number }}
            atsigncompany/root:prod-${{ env.BRANCH }}-gha${{ github.run_number }}

  provenance:
    needs: [Docker_Build]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    if: startsWith(github.ref, 'refs/tags/')
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: "atsigncompany/root"
      digest: ${{ needs.Docker_Build.outputs.digest }}
    secrets:
      registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
      registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  Deploy_On_Prod_K8:
    needs: Docker_Build
    runs-on: [self-hosted, linux, x64, K8s]
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      # Extract branch for docker tag
      - name: Get branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Setup gcloud CLI
      - id: 'auth'
        uses: google-github-actions/auth@71fee32a0bb7e97b4d33d548e7d957010649d8fa # v2.1.3
        with:
          credentials_json: '${{ secrets.GKE_SA_PROD_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@c544a3d7e92276d24e03a5632a53aa3913ad5d8a # v2.2.0
        with:
          cluster_name: ${{ secrets.GKE_PROD_CLUSTER }}
          location: ${{ secrets.GKE_PROD_ZONE }}

      # Deploy the Docker image to the GKE cluster 
      - name: Deploy
        run: |-
          kubectl -n root set image deployment/root root=atsigncompany/root:prod-gha${{ github.run_number }}
          kubectl rollout restart deployment root -n root
