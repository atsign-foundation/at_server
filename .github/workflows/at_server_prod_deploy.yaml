name: at_root deploy (prod)
on:
  push:
    tags:
      - 'r*.*.*'
    paths:
      - packages/*_root_server/**

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read
jobs:
  Docker_Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      # Extract branch for docker tag
      - name: Get branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build the Docker image for Dev
      - name: Build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # v3.2.0
        with:
          file: packages/at_root_server/Dockerfile
          context: packages/at_root_server
          push: true
          tags: |
            atsigncompany/root:prod
            atsigncompany/root:prod-${{ env.BRANCH }}-gha${{ github.run_number }}

  Deploy_On_Prod_K8:
    needs: Docker_Build
    runs-on: [self-hosted, linux, x64, K8s]
    steps:
      # Extract branch for docker tag
      - name: Get branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Setup gcloud CLI
      - id: 'auth'
        uses: 'google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # v1.0.0'
        with:
          credentials_json: '${{ secrets.GKE_SA_PROD_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce # v1.0.1'  

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@0a5f57b989b81d2725178cda257a00acf7d6bb5f # v0.7.0
        with:
          cluster_name: ${{ secrets.GKE_PROD_CLUSTER }}
          location: ${{ secrets.GKE_PROD_ZONE }}

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl -n root set image deployment/root root=atsigncompany/root:prod