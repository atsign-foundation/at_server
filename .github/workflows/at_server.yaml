name: Rollback_test
# Runs the workflow on the below events:
# 1. Manual deploy to test rollback.

on:
  workflow_dispatch:
    inputs:
      rollback_prod_secondary_image:
        type: boolean
        default: true
        description: Rollback Prod secondary image
      rollback_canary_to_prod_secondary_image:
        type: boolean
        default: true
        description: rollback canary to prod secondary image        

jobs:

  rollback_prod_secondary_image:
    # Runs only after functional tests are completed.
    if: ${{ github.event.inputs.rollback_prod_secondary_image == 'true' }}
    env:
      working-directory: at_server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      # Extract version for docker tag
      - name: Get version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create amd64 labels
        run: |
          docker pull --platform=linux/amd64 kumarnarendra701/docker-rollback:${{ env.VERSION }}
          docker tag kumarnarendra701/docker-rollback:${{ env.VERSION }} kumarnarendra701/docker-rollback:${{ env.VERSION }}-amd64
          docker push kumarnarendra701/docker-rollback:${{ env.VERSION }}-amd64

      - name: Create arm64 labels
        run: |
          docker pull --platform=linux/arm64 kumarnarendra701/docker-rollback:${{ env.VERSION }}
          docker tag kumarnarendra701/docker-rollback:${{ env.VERSION }} kumarnarendra701/docker-rollback:${{ env.VERSION }}-arm64
          docker push kumarnarendra701/docker-rollback:${{ env.VERSION }}-arm64

      - name: Create and push multi-arch manifest for version
        run: |
          docker manifest create kumarnarendra701/docker-rollback:${{ env.VERSION }} \
            --amend kumarnarendra701/docker-rollback:${{ env.VERSION }}-arm64 \
            --amend kumarnarendra701/docker-rollback:${{ env.VERSION }}-amd64
          docker manifest push kumarnarendra701/docker-rollback:${{ env.VERSION }}
          
      - name: Create and push multi-arch manifest for prod
        run: |
          docker manifest create kumarnarendra701/docker-rollback:prod \
            --amend kumarnarendra701/docker-rollback:${{ env.VERSION }}-arm64 \
            --amend kumarnarendra701/docker-rollback:${{ env.VERSION }}-amd64
          docker manifest push kumarnarendra701/docker-rollback:prod
         
  rollback_canary_to_prod_secondary_image:
    if: ${{ github.event.inputs.rollback_canary_to_prod_secondary_image == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2

      - name: Get version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Place canary version into pubsec.yaml
        run: sed -i "s/version\:.*/&+${GITHUB_REF#refs/tags/}/" pubsec.yaml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build the image using buildx
        run: |
          docker buildx build --push --tag kumarnarendra701/secondary:prod --platform linux/arm64,linux/amd64 Dockerfile.canary_to_prod
          
